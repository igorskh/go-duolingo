// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/igorskh/go-duolingo/models"
)

// GetXpSummariesReader is a Reader for the GetXpSummaries structure.
type GetXpSummariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXpSummariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetXpSummariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetXpSummariesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetXpSummariesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetXpSummariesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetXpSummariesOK creates a GetXpSummariesOK with default headers values
func NewGetXpSummariesOK() *GetXpSummariesOK {
	return &GetXpSummariesOK{}
}

/*GetXpSummariesOK handles this case with default header values.

A Users summaries object.
*/
type GetXpSummariesOK struct {
	Payload *GetXpSummariesOKBody
}

func (o *GetXpSummariesOK) Error() string {
	return fmt.Sprintf("[GET /users/{userID}/xp_summaries][%d] getXpSummariesOK  %+v", 200, o.Payload)
}

func (o *GetXpSummariesOK) GetPayload() *GetXpSummariesOKBody {
	return o.Payload
}

func (o *GetXpSummariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetXpSummariesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXpSummariesBadRequest creates a GetXpSummariesBadRequest with default headers values
func NewGetXpSummariesBadRequest() *GetXpSummariesBadRequest {
	return &GetXpSummariesBadRequest{}
}

/*GetXpSummariesBadRequest handles this case with default header values.

The specified user ID is invalid (e.g. not a number).
*/
type GetXpSummariesBadRequest struct {
}

func (o *GetXpSummariesBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{userID}/xp_summaries][%d] getXpSummariesBadRequest ", 400)
}

func (o *GetXpSummariesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetXpSummariesNotFound creates a GetXpSummariesNotFound with default headers values
func NewGetXpSummariesNotFound() *GetXpSummariesNotFound {
	return &GetXpSummariesNotFound{}
}

/*GetXpSummariesNotFound handles this case with default header values.

A user with the specified ID was not found.
*/
type GetXpSummariesNotFound struct {
}

func (o *GetXpSummariesNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{userID}/xp_summaries][%d] getXpSummariesNotFound ", 404)
}

func (o *GetXpSummariesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetXpSummariesDefault creates a GetXpSummariesDefault with default headers values
func NewGetXpSummariesDefault(code int) *GetXpSummariesDefault {
	return &GetXpSummariesDefault{
		_statusCode: code,
	}
}

/*GetXpSummariesDefault handles this case with default header values.

Unexpected error
*/
type GetXpSummariesDefault struct {
	_statusCode int
}

// Code gets the status code for the get xp summaries default response
func (o *GetXpSummariesDefault) Code() int {
	return o._statusCode
}

func (o *GetXpSummariesDefault) Error() string {
	return fmt.Sprintf("[GET /users/{userID}/xp_summaries][%d] getXpSummaries default ", o._statusCode)
}

func (o *GetXpSummariesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetXpSummariesOKBody get xp summaries o k body
swagger:model GetXpSummariesOKBody
*/
type GetXpSummariesOKBody struct {

	// summaries
	Summaries []*models.XpSummary `json:"summaries"`
}

// Validate validates this get xp summaries o k body
func (o *GetXpSummariesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSummaries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXpSummariesOKBody) validateSummaries(formats strfmt.Registry) error {

	if swag.IsZero(o.Summaries) { // not required
		return nil
	}

	for i := 0; i < len(o.Summaries); i++ {
		if swag.IsZero(o.Summaries[i]) { // not required
			continue
		}

		if o.Summaries[i] != nil {
			if err := o.Summaries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getXpSummariesOK" + "." + "summaries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXpSummariesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXpSummariesOKBody) UnmarshalBinary(b []byte) error {
	var res GetXpSummariesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
