// Code generated by go-swagger; DO NOT EDIT.

package leaderboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/igorskh/go-duolingo/models"
)

// GetLeaderboardReader is a Reader for the GetLeaderboard structure.
type GetLeaderboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLeaderboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLeaderboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLeaderboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLeaderboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetLeaderboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLeaderboardOK creates a GetLeaderboardOK with default headers values
func NewGetLeaderboardOK() *GetLeaderboardOK {
	return &GetLeaderboardOK{}
}

/*GetLeaderboardOK handles this case with default header values.

A Leaderboard object.
*/
type GetLeaderboardOK struct {
	Payload *models.Leaderdoard
}

func (o *GetLeaderboardOK) Error() string {
	return fmt.Sprintf("[GET /leaderboards/{leaderboardID}/users/{userID}][%d] getLeaderboardOK  %+v", 200, o.Payload)
}

func (o *GetLeaderboardOK) GetPayload() *models.Leaderdoard {
	return o.Payload
}

func (o *GetLeaderboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Leaderdoard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLeaderboardBadRequest creates a GetLeaderboardBadRequest with default headers values
func NewGetLeaderboardBadRequest() *GetLeaderboardBadRequest {
	return &GetLeaderboardBadRequest{}
}

/*GetLeaderboardBadRequest handles this case with default header values.

The specified user ID or leaderboard ID is invalid (e.g. not a number).
*/
type GetLeaderboardBadRequest struct {
}

func (o *GetLeaderboardBadRequest) Error() string {
	return fmt.Sprintf("[GET /leaderboards/{leaderboardID}/users/{userID}][%d] getLeaderboardBadRequest ", 400)
}

func (o *GetLeaderboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLeaderboardNotFound creates a GetLeaderboardNotFound with default headers values
func NewGetLeaderboardNotFound() *GetLeaderboardNotFound {
	return &GetLeaderboardNotFound{}
}

/*GetLeaderboardNotFound handles this case with default header values.

A user with the specified ID was not found.
*/
type GetLeaderboardNotFound struct {
}

func (o *GetLeaderboardNotFound) Error() string {
	return fmt.Sprintf("[GET /leaderboards/{leaderboardID}/users/{userID}][%d] getLeaderboardNotFound ", 404)
}

func (o *GetLeaderboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLeaderboardDefault creates a GetLeaderboardDefault with default headers values
func NewGetLeaderboardDefault(code int) *GetLeaderboardDefault {
	return &GetLeaderboardDefault{
		_statusCode: code,
	}
}

/*GetLeaderboardDefault handles this case with default header values.

Unexpected error
*/
type GetLeaderboardDefault struct {
	_statusCode int
}

// Code gets the status code for the get leaderboard default response
func (o *GetLeaderboardDefault) Code() int {
	return o._statusCode
}

func (o *GetLeaderboardDefault) Error() string {
	return fmt.Sprintf("[GET /leaderboards/{leaderboardID}/users/{userID}][%d] getLeaderboard default ", o._statusCode)
}

func (o *GetLeaderboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
