// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LeaderboardContest leaderboard contest
// swagger:model leaderboardContest
type LeaderboardContest struct {

	// contest end
	ContestEnd string `json:"contest_end",omitempty"`

	// contest start
	ContestStart string `json:"contest_start,omitempty"`

	// contest state
	ContestState string `json:"contest_state,omitempty"`

	// registration end
	RegistrationEnd string `json:"registration_end,omitempty"`

	// registration state
	RegistrationState string `json:"registration_state,omitempty"`

	// ruleset
	Ruleset *LeaderboradContestRuleset `json:"ruleset,omitempty"`
}

// Validate validates this leaderboard contest
func (m *LeaderboardContest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRuleset(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LeaderboardContest) validateRuleset(formats strfmt.Registry) error {

	if swag.IsZero(m.Ruleset) { // not required
		return nil
	}

	if m.Ruleset != nil {
		if err := m.Ruleset.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ruleset")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LeaderboardContest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LeaderboardContest) UnmarshalBinary(b []byte) error {
	var res LeaderboardContest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
